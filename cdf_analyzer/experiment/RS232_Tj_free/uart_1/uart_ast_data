Source:  (at 3)
  Description:  (at 3)
    ModuleDef: uart (from 3 to 140)
      Paramlist:  (at 0)
      Portlist:  (at 3)
        Port: sys_clk, None (at 3)
        Port: sys_rst_l, None (at 3)
        Port: uart_XMIT_dataH, None (at 3)
        Port: xmitH, None (at 3)
        Port: xmit_dataH, None (at 3)
        Port: xmit_doneH, None (at 3)
        Port: uart_REC_dataH, None (at 3)
        Port: rec_dataH, None (at 3)
        Port: rec_readyH, None (at 3)
      Decl:  (at 21)
        Parameter: r_START, False (at 21)
          Rvalue:  (at 21)
            IntConst: 3'b001 (at 21)
        Parameter: r_CENTER, False (at 21)
          Rvalue:  (at 22)
            IntConst: 3'b010 (at 22)
        Parameter: r_WAIT, False (at 21)
          Rvalue:  (at 23)
            IntConst: 3'b011 (at 23)
        Parameter: r_SAMPLE, False (at 21)
          Rvalue:  (at 24)
            IntConst: 3'b100 (at 24)
        Parameter: r_STOP, False (at 21)
          Rvalue:  (at 25)
            IntConst: 3'b101 (at 25)
      Decl:  (at 30)
        Parameter: x_IDLE, False (at 30)
          Rvalue:  (at 30)
            IntConst: 3'b000 (at 30)
        Parameter: x_START, False (at 30)
          Rvalue:  (at 31)
            IntConst: 3'b010 (at 31)
        Parameter: x_WAIT, False (at 30)
          Rvalue:  (at 32)
            IntConst: 3'b011 (at 32)
        Parameter: x_SHIFT, False (at 30)
          Rvalue:  (at 33)
            IntConst: 3'b100 (at 33)
        Parameter: x_STOP, False (at 30)
          Rvalue:  (at 34)
            IntConst: 3'b101 (at 34)
        Parameter: x_DataSend, False (at 30)
          Rvalue:  (at 35)
            IntConst: 3'b111 (at 35)
      Decl:  (at 38)
        Parameter: s_idle, False (at 38)
          Rvalue:  (at 38)
            IntConst: 3'b000 (at 38)
        Parameter: s_count1, False (at 38)
          Rvalue:  (at 39)
            IntConst: 3'b001 (at 39)
        Parameter: s_count2, False (at 38)
          Rvalue:  (at 40)
            IntConst: 3'b010 (at 40)
        Parameter: s_count3, False (at 38)
          Rvalue:  (at 41)
            IntConst: 3'b011 (at 41)
        Parameter: s_stop, False (at 38)
          Rvalue:  (at 42)
            IntConst: 3'b111 (at 42)
      Decl:  (at 45)
        Parameter: x_STARTbit, False (at 45)
          Rvalue:  (at 45)
            IntConst: 2'b00 (at 45)
        Parameter: x_STOPbit, False (at 45)
          Rvalue:  (at 46)
            IntConst: 2'b01 (at 46)
        Parameter: x_ShiftReg, False (at 45)
          Rvalue:  (at 47)
            IntConst: 2'b10 (at 47)
        Parameter: x_miDataSend, False (at 45)
          Rvalue:  (at 48)
            IntConst: 2'b11 (at 48)
      Decl:  (at 53)
        Parameter: LO, False (at 53)
          Rvalue:  (at 53)
            IntConst: 1'b0 (at 53)
        Parameter: HI, False (at 53)
          Rvalue:  (at 54)
            IntConst: 1'b1 (at 54)
        Parameter: X, False (at 53)
          Rvalue:  (at 55)
            IntConst: 1'bx (at 55)
        Parameter: DataSend, False (at 53)
          Rvalue:  (at 56)
            IntConst: 1'b0 (at 56)
      Decl:  (at 59)
        Parameter: DataSend_bit, False (at 59)
          Rvalue:  (at 59)
            IntConst: 1'b1 (at 59)
      Decl:  (at 60)
        Parameter: DataCon_bit, False (at 60)
          Rvalue:  (at 60)
            IntConst: 1'b1 (at 60)
      Decl:  (at 73)
        Parameter: WORD_LEN, False (at 73)
          Rvalue:  (at 73)
            IntConst: 8 (at 73)
      Decl:  (at 80)
        Input: sys_clk, False (at 80)
      Decl:  (at 81)
        Input: sys_rst_l, False (at 81)
      Decl:  (at 84)
        Output: uart_XMIT_dataH, False (at 84)
      Decl:  (at 85)
        Input: xmitH, False (at 85)
      Decl:  (at 86)
        Input: xmit_dataH, False (at 86)
          Width:  (at 86)
            IntConst: 7 (at 86)
            IntConst: 0 (at 86)
      Decl:  (at 87)
        Output: xmit_doneH, False (at 87)
      Decl:  (at 90)
        Input: uart_REC_dataH, False (at 90)
      Decl:  (at 91)
        Output: rec_dataH, False (at 91)
          Width:  (at 91)
            IntConst: 7 (at 91)
            IntConst: 0 (at 91)
      Decl:  (at 92)
        Output: rec_readyH, False (at 92)
      Decl:  (at 94)
        Reg: rec_dataH, False (at 94)
          Width:  (at 94)
            IntConst: 7 (at 94)
            IntConst: 0 (at 94)
      Decl:  (at 95)
        Reg: rec_dataH_temp, False (at 95)
          Width:  (at 95)
            IntConst: 7 (at 95)
            IntConst: 0 (at 95)
      Decl:  (at 96)
        Wire: rec_dataH_rec, False (at 96)
          Width:  (at 96)
            IntConst: 7 (at 96)
            IntConst: 0 (at 96)
      Decl:  (at 97)
        Wire: rec_readyH, False (at 97)
      InstanceList: u_xmit (from 101 to 108)
        Instance: iXMIT, u_xmit (at 101)
          PortArg: sys_clk (at 101)
            Identifier: sys_clk (at 101)
          PortArg: sys_rst_l (at 102)
            Identifier: sys_rst_l (at 102)
          PortArg: uart_xmitH (at 104)
            Identifier: uart_XMIT_dataH (at 104)
          PortArg: xmitH (at 105)
            Identifier: xmitH (at 105)
          PortArg: xmit_dataH (at 106)
            Identifier: xmit_dataH (at 106)
          PortArg: xmit_doneH (at 107)
            Identifier: xmit_doneH (at 107)
      InstanceList: u_rec (from 110 to 119)
        Instance: iRECEIVER, u_rec (at 110)
          PortArg: sys_rst_l (at 110)
            Identifier: sys_rst_l (at 110)
          PortArg: sys_clk (at 111)
            Identifier: sys_clk (at 111)
          PortArg: uart_dataH (at 114)
            Identifier: uart_REC_dataH (at 114)
          PortArg: rec_dataH (at 116)
            Identifier: rec_dataH_rec (at 116)
          PortArg: rec_readyH (at 117)
            Identifier: rec_readyH (at 117)
      Always:  (from 121 to 128)
        SensList:  (at 121)
          Sens: posedge (at 121)
            Identifier: sys_clk (at 121)
          Sens: negedge (at 121)
            Identifier: sys_rst_l (at 121)
        Block: None (from 121 to 128)
          IfStatement:  (from 122 to 127)
            Unot:  (at 122)
              Identifier: sys_rst_l (at 122)
            Block: None (from 122 to 124)
              BlockingSubstitution:  (from 123 to 123)
                Lvalue:  (at 123)
                  Identifier: rec_dataH (at 123)
                Rvalue:  (at 123)
                  IntConst: 0 (at 123)
            Block: None (from 125 to 127)
              BlockingSubstitution:  (from 126 to 126)
                Lvalue:  (at 126)
                  Identifier: rec_dataH (at 126)
                Rvalue:  (at 126)
                  Identifier: rec_dataH_temp (at 126)
      Always:  (from 131 to 138)
        SensList:  (at 131)
          Sens: posedge (at 131)
            Identifier: rec_readyH (at 131)
          Sens: negedge (at 131)
            Identifier: sys_rst_l (at 131)
        Block: None (from 131 to 138)
          IfStatement:  (from 132 to 137)
            Unot:  (at 132)
              Identifier: sys_rst_l (at 132)
            Block: None (from 132 to 134)
              NonblockingSubstitution:  (from 133 to 133)
                Lvalue:  (at 133)
                  Identifier: rec_dataH_temp (at 133)
                Rvalue:  (at 133)
                  IntConst: 0 (at 133)
            Block: None (from 135 to 137)
              NonblockingSubstitution:  (from 136 to 136)
                Lvalue:  (at 136)
                  Identifier: rec_dataH_temp (at 136)
                Rvalue:  (at 136)
                  Identifier: rec_dataH_rec (at 136)
    ModuleDef: u_rec (from 144 to 364)
      Paramlist:  (at 0)
      Portlist:  (at 144)
        Port: sys_rst_l, None (at 145)
        Port: sys_clk, None (at 145)
        Port: uart_dataH, None (at 145)
        Port: rec_dataH, None (at 145)
        Port: rec_readyH, None (at 145)
      Decl:  (at 160)
        Parameter: r_START, False (at 160)
          Rvalue:  (at 160)
            IntConst: 3'b001 (at 160)
        Parameter: r_CENTER, False (at 160)
          Rvalue:  (at 161)
            IntConst: 3'b010 (at 161)
        Parameter: r_WAIT, False (at 160)
          Rvalue:  (at 162)
            IntConst: 3'b011 (at 162)
        Parameter: r_SAMPLE, False (at 160)
          Rvalue:  (at 163)
            IntConst: 3'b100 (at 163)
        Parameter: r_STOP, False (at 160)
          Rvalue:  (at 164)
            IntConst: 3'b101 (at 164)
      Decl:  (at 169)
        Parameter: x_IDLE, False (at 169)
          Rvalue:  (at 169)
            IntConst: 3'b000 (at 169)
        Parameter: x_START, False (at 169)
          Rvalue:  (at 170)
            IntConst: 3'b010 (at 170)
        Parameter: x_WAIT, False (at 169)
          Rvalue:  (at 171)
            IntConst: 3'b011 (at 171)
        Parameter: x_SHIFT, False (at 169)
          Rvalue:  (at 172)
            IntConst: 3'b100 (at 172)
        Parameter: x_STOP, False (at 169)
          Rvalue:  (at 173)
            IntConst: 3'b101 (at 173)
        Parameter: x_DataSend, False (at 169)
          Rvalue:  (at 174)
            IntConst: 3'b111 (at 174)
      Decl:  (at 177)
        Parameter: s_idle, False (at 177)
          Rvalue:  (at 177)
            IntConst: 3'b000 (at 177)
        Parameter: s_count1, False (at 177)
          Rvalue:  (at 178)
            IntConst: 3'b001 (at 178)
        Parameter: s_count2, False (at 177)
          Rvalue:  (at 179)
            IntConst: 3'b010 (at 179)
        Parameter: s_count3, False (at 177)
          Rvalue:  (at 180)
            IntConst: 3'b011 (at 180)
        Parameter: s_stop, False (at 177)
          Rvalue:  (at 181)
            IntConst: 3'b111 (at 181)
      Decl:  (at 184)
        Parameter: x_STARTbit, False (at 184)
          Rvalue:  (at 184)
            IntConst: 2'b00 (at 184)
        Parameter: x_STOPbit, False (at 184)
          Rvalue:  (at 185)
            IntConst: 2'b01 (at 185)
        Parameter: x_ShiftReg, False (at 184)
          Rvalue:  (at 186)
            IntConst: 2'b10 (at 186)
        Parameter: x_miDataSend, False (at 184)
          Rvalue:  (at 187)
            IntConst: 2'b11 (at 187)
      Decl:  (at 192)
        Parameter: LO, False (at 192)
          Rvalue:  (at 192)
            IntConst: 1'b0 (at 192)
        Parameter: HI, False (at 192)
          Rvalue:  (at 193)
            IntConst: 1'b1 (at 193)
        Parameter: X, False (at 192)
          Rvalue:  (at 194)
            IntConst: 1'bx (at 194)
        Parameter: DataSend, False (at 192)
          Rvalue:  (at 195)
            IntConst: 1'b0 (at 195)
      Decl:  (at 198)
        Parameter: DataSend_bit, False (at 198)
          Rvalue:  (at 198)
            IntConst: 1'b1 (at 198)
      Decl:  (at 199)
        Parameter: DataCon_bit, False (at 199)
          Rvalue:  (at 199)
            IntConst: 1'b1 (at 199)
      Decl:  (at 212)
        Parameter: WORD_LEN, False (at 212)
          Rvalue:  (at 212)
            IntConst: 8 (at 212)
      Decl:  (at 219)
        Input: sys_rst_l, False (at 219)
      Decl:  (at 220)
        Input: sys_clk, False (at 220)
      Decl:  (at 222)
        Input: uart_dataH, False (at 222)
      Decl:  (at 224)
        Output: rec_dataH, False (at 224)
          Width:  (at 224)
            IntConst: 7 (at 224)
            IntConst: 0 (at 224)
      Decl:  (at 225)
        Output: rec_readyH, False (at 225)
      Decl:  (at 229)
        Reg: next_state, False (at 229)
          Width:  (at 229)
            IntConst: 2 (at 229)
            IntConst: 0 (at 229)
        Reg: state, False (at 229)
          Width:  (at 229)
            IntConst: 2 (at 229)
            IntConst: 0 (at 229)
      Decl:  (at 230)
        Reg: rec_datH, False (at 230)
        Reg: rec_datSyncH, False (at 230)
      Decl:  (at 231)
        Reg: bitCell_cntrH, False (at 231)
          Width:  (at 231)
            IntConst: 3 (at 231)
            IntConst: 0 (at 231)
      Decl:  (at 232)
        Reg: cntr_resetH, False (at 232)
      Decl:  (at 233)
        Reg: par_dataH, False (at 233)
          Width:  (at 233)
            IntConst: 7 (at 233)
            IntConst: 0 (at 233)
      Decl:  (at 234)
        Reg: shiftH, False (at 234)
      Decl:  (at 235)
        Reg: recd_bitCntrH, False (at 235)
          Width:  (at 235)
            IntConst: 3 (at 235)
            IntConst: 0 (at 235)
      Decl:  (at 236)
        Reg: countH, False (at 236)
      Decl:  (at 237)
        Reg: rstCountH, False (at 237)
      Decl:  (at 238)
        Reg: rec_readyH, False (at 238)
      Decl:  (at 239)
        Reg: rec_readyInH, False (at 239)
      Decl:  (at 242)
        Wire: rec_dataH, False (at 242)
          Width:  (at 242)
            IntConst: 7 (at 242)
            IntConst: 0 (at 242)
      Assign:  (from 245 to 245)
        Lvalue:  (at 245)
          Identifier: rec_dataH (at 245)
        Rvalue:  (at 245)
          Identifier: par_dataH (at 245)
      Always:  (from 247 to 254)
        SensList:  (at 247)
          Sens: posedge (at 247)
            Identifier: sys_clk (at 247)
          Sens: negedge (at 247)
            Identifier: sys_rst_l (at 247)
        IfStatement:  (from 248 to 254)
          Unot:  (at 248)
            Identifier: sys_rst_l (at 248)
          Block: None (from 248 to 251)
            NonblockingSubstitution:  (from 249 to 249)
              Lvalue:  (at 249)
                Identifier: rec_datSyncH (at 249)
              Rvalue:  (at 249)
                IntConst: 1 (at 249)
            NonblockingSubstitution:  (from 250 to 250)
              Lvalue:  (at 250)
                Identifier: rec_datH (at 250)
              Rvalue:  (at 250)
                IntConst: 1 (at 250)
          Block: None (from 251 to 254)
            NonblockingSubstitution:  (from 252 to 252)
              Lvalue:  (at 252)
                Identifier: rec_datSyncH (at 252)
              Rvalue:  (at 252)
                Identifier: uart_dataH (at 252)
            NonblockingSubstitution:  (from 253 to 253)
              Lvalue:  (at 253)
                Identifier: rec_datH (at 253)
              Rvalue:  (at 253)
                Identifier: rec_datSyncH (at 253)
      Always:  (from 257 to 260)
        SensList:  (at 257)
          Sens: posedge (at 257)
            Identifier: sys_clk (at 257)
          Sens: negedge (at 257)
            Identifier: sys_rst_l (at 257)
        IfStatement:  (from 258 to 260)
          Unot:  (at 258)
            Identifier: sys_rst_l (at 258)
          NonblockingSubstitution:  (from 258 to 258)
            Lvalue:  (at 258)
              Identifier: bitCell_cntrH (at 258)
            Rvalue:  (at 258)
              IntConst: 0 (at 258)
          IfStatement:  (from 259 to 260)
            Identifier: cntr_resetH (at 259)
            NonblockingSubstitution:  (from 259 to 259)
              Lvalue:  (at 259)
                Identifier: bitCell_cntrH (at 259)
              Rvalue:  (at 259)
                IntConst: 0 (at 259)
            NonblockingSubstitution:  (from 260 to 260)
              Lvalue:  (at 260)
                Identifier: bitCell_cntrH (at 260)
              Rvalue:  (at 260)
                Plus:  (at 260)
                  Identifier: bitCell_cntrH (at 260)
                  IntConst: 1 (at 260)
      Always:  (from 263 to 268)
        SensList:  (at 263)
          Sens: posedge (at 263)
            Identifier: sys_clk (at 263)
          Sens: negedge (at 263)
            Identifier: sys_rst_l (at 263)
        IfStatement:  (from 264 to 268)
          Unot:  (at 264)
            Identifier: sys_rst_l (at 264)
          NonblockingSubstitution:  (from 264 to 264)
            Lvalue:  (at 264)
              Identifier: par_dataH (at 264)
            Rvalue:  (at 264)
              IntConst: 0 (at 264)
          IfStatement:  (from 265 to 268)
            Identifier: shiftH (at 265)
            Block: None (from 265 to 268)
              NonblockingSubstitution:  (from 266 to 266)
                Lvalue:  (at 266)
                  Partselect:  (at 266)
                    Identifier: par_dataH (at 266)
                    IntConst: 6 (at 266)
                    IntConst: 0 (at 266)
                Rvalue:  (at 266)
                  Partselect:  (at 266)
                    Identifier: par_dataH (at 266)
                    IntConst: 7 (at 266)
                    IntConst: 1 (at 266)
              NonblockingSubstitution:  (from 267 to 267)
                Lvalue:  (at 267)
                  Pointer:  (at 267)
                    Identifier: par_dataH (at 267)
                    IntConst: 7 (at 267)
                Rvalue:  (at 267)
                  Identifier: rec_datH (at 267)
      Always:  (from 271 to 274)
        SensList:  (at 271)
          Sens: posedge (at 271)
            Identifier: sys_clk (at 271)
          Sens: negedge (at 271)
            Identifier: sys_rst_l (at 271)
        IfStatement:  (from 272 to 274)
          Unot:  (at 272)
            Identifier: sys_rst_l (at 272)
          NonblockingSubstitution:  (from 272 to 272)
            Lvalue:  (at 272)
              Identifier: recd_bitCntrH (at 272)
            Rvalue:  (at 272)
              IntConst: 0 (at 272)
          IfStatement:  (from 273 to 274)
            Identifier: countH (at 273)
            NonblockingSubstitution:  (from 273 to 273)
              Lvalue:  (at 273)
                Identifier: recd_bitCntrH (at 273)
              Rvalue:  (at 273)
                Plus:  (at 273)
                  Identifier: recd_bitCntrH (at 273)
                  IntConst: 1 (at 273)
            IfStatement:  (from 274 to 274)
              Identifier: rstCountH (at 274)
              NonblockingSubstitution:  (from 274 to 274)
                Lvalue:  (at 274)
                  Identifier: recd_bitCntrH (at 274)
                Rvalue:  (at 274)
                  IntConst: 0 (at 274)
      Always:  (from 279 to 281)
        SensList:  (at 279)
          Sens: posedge (at 279)
            Identifier: sys_clk (at 279)
          Sens: negedge (at 279)
            Identifier: sys_rst_l (at 279)
        IfStatement:  (from 280 to 281)
          Unot:  (at 280)
            Identifier: sys_rst_l (at 280)
          NonblockingSubstitution:  (from 280 to 280)
            Lvalue:  (at 280)
              Identifier: state (at 280)
            Rvalue:  (at 280)
              Identifier: r_START (at 280)
          NonblockingSubstitution:  (from 281 to 281)
            Lvalue:  (at 281)
              Identifier: state (at 281)
            Rvalue:  (at 281)
              Identifier: next_state (at 281)
      Always:  (from 284 to 354)
        SensList:  (at 284)
          Sens: level (at 284)
            Identifier: state (at 284)
          Sens: level (at 284)
            Identifier: rec_datH (at 284)
          Sens: level (at 284)
            Identifier: bitCell_cntrH (at 284)
          Sens: level (at 284)
            Identifier: recd_bitCntrH (at 284)
        Block: None (from 285 to 354)
          BlockingSubstitution:  (from 287 to 287)
            Lvalue:  (at 287)
              Identifier: next_state (at 287)
            Rvalue:  (at 287)
              Identifier: state (at 287)
          BlockingSubstitution:  (from 288 to 288)
            Lvalue:  (at 288)
              Identifier: cntr_resetH (at 288)
            Rvalue:  (at 288)
              Identifier: HI (at 288)
          BlockingSubstitution:  (from 289 to 289)
            Lvalue:  (at 289)
              Identifier: shiftH (at 289)
            Rvalue:  (at 289)
              Identifier: LO (at 289)
          BlockingSubstitution:  (from 290 to 290)
            Lvalue:  (at 290)
              Identifier: countH (at 290)
            Rvalue:  (at 290)
              Identifier: LO (at 290)
          BlockingSubstitution:  (from 291 to 291)
            Lvalue:  (at 291)
              Identifier: rstCountH (at 291)
            Rvalue:  (at 291)
              Identifier: LO (at 291)
          BlockingSubstitution:  (from 292 to 292)
            Lvalue:  (at 292)
              Identifier: rec_readyInH (at 292)
            Rvalue:  (at 292)
              Identifier: LO (at 292)
          CaseStatement:  (from 294 to 351)
            Identifier: state (at 294)
            Case:  (at 296)
              Identifier: r_START (at 296)
              Block: None (from 296 to 303)
                IfStatement:  (from 297 to 302)
                  Unot:  (at 297)
                    Identifier: rec_datH (at 297)
                  BlockingSubstitution:  (from 297 to 297)
                    Lvalue:  (at 297)
                      Identifier: next_state (at 297)
                    Rvalue:  (at 297)
                      Identifier: r_CENTER (at 297)
                  Block: None (from 298 to 302)
                    BlockingSubstitution:  (from 299 to 299)
                      Lvalue:  (at 299)
                        Identifier: next_state (at 299)
                      Rvalue:  (at 299)
                        Identifier: r_START (at 299)
                    BlockingSubstitution:  (from 300 to 300)
                      Lvalue:  (at 300)
                        Identifier: rstCountH (at 300)
                      Rvalue:  (at 300)
                        Identifier: HI (at 300)
                    BlockingSubstitution:  (from 301 to 301)
                      Lvalue:  (at 301)
                        Identifier: rec_readyInH (at 301)
                      Rvalue:  (at 301)
                        Identifier: HI (at 301)
            Case:  (at 305)
              Identifier: r_CENTER (at 305)
              Block: None (from 305 to 313)
                IfStatement:  (from 306 to 312)
                  Eq:  (at 306)
                    Identifier: bitCell_cntrH (at 306)
                    IntConst: 4'h4 (at 306)
                  Block: None (from 306 to 309)
                    IfStatement:  (from 307 to 308)
                      Unot:  (at 307)
                        Identifier: rec_datH (at 307)
                      BlockingSubstitution:  (from 307 to 307)
                        Lvalue:  (at 307)
                          Identifier: next_state (at 307)
                        Rvalue:  (at 307)
                          Identifier: r_WAIT (at 307)
                      BlockingSubstitution:  (from 308 to 308)
                        Lvalue:  (at 308)
                          Identifier: next_state (at 308)
                        Rvalue:  (at 308)
                          Identifier: r_START (at 308)
                  Block: None (from 309 to 312)
                    BlockingSubstitution:  (from 310 to 310)
                      Lvalue:  (at 310)
                        Identifier: next_state (at 310)
                      Rvalue:  (at 310)
                        Identifier: r_CENTER (at 310)
                    BlockingSubstitution:  (from 311 to 311)
                      Lvalue:  (at 311)
                        Identifier: cntr_resetH (at 311)
                      Rvalue:  (at 311)
                        Identifier: LO (at 311)
            Case:  (at 316)
              Identifier: r_WAIT (at 316)
              Block: None (from 316 to 327)
                IfStatement:  (from 317 to 326)
                  Eq:  (at 317)
                    Identifier: bitCell_cntrH (at 317)
                    IntConst: 4'hE (at 317)
                  Block: None (from 317 to 323)
                    IfStatement:  (from 318 to 322)
                      Eq:  (at 318)
                        Identifier: recd_bitCntrH (at 318)
                        Identifier: WORD_LEN (at 318)
                      BlockingSubstitution:  (from 319 to 319)
                        Lvalue:  (at 319)
                          Identifier: next_state (at 319)
                        Rvalue:  (at 319)
                          Identifier: r_STOP (at 319)
                      Block: None (from 320 to 322)
                        BlockingSubstitution:  (from 321 to 321)
                          Lvalue:  (at 321)
                            Identifier: next_state (at 321)
                          Rvalue:  (at 321)
                            Identifier: r_SAMPLE (at 321)
                  Block: None (from 323 to 326)
                    BlockingSubstitution:  (from 324 to 324)
                      Lvalue:  (at 324)
                        Identifier: next_state (at 324)
                      Rvalue:  (at 324)
                        Identifier: r_WAIT (at 324)
                    BlockingSubstitution:  (from 325 to 325)
                      Lvalue:  (at 325)
                        Identifier: cntr_resetH (at 325)
                      Rvalue:  (at 325)
                        Identifier: LO (at 325)
            Case:  (at 329)
              Identifier: r_SAMPLE (at 329)
              Block: None (from 329 to 333)
                BlockingSubstitution:  (from 330 to 330)
                  Lvalue:  (at 330)
                    Identifier: shiftH (at 330)
                  Rvalue:  (at 330)
                    Identifier: HI (at 330)
                BlockingSubstitution:  (from 331 to 331)
                  Lvalue:  (at 331)
                    Identifier: countH (at 331)
                  Rvalue:  (at 331)
                    Identifier: HI (at 331)
                BlockingSubstitution:  (from 332 to 332)
                  Lvalue:  (at 332)
                    Identifier: next_state (at 332)
                  Rvalue:  (at 332)
                    Identifier: r_WAIT (at 332)
            Case:  (at 336)
              Identifier: r_STOP (at 336)
              Block: None (from 336 to 339)
                BlockingSubstitution:  (from 337 to 337)
                  Lvalue:  (at 337)
                    Identifier: next_state (at 337)
                  Rvalue:  (at 337)
                    Identifier: r_START (at 337)
                BlockingSubstitution:  (from 338 to 338)
                  Lvalue:  (at 338)
                    Identifier: rec_readyInH (at 338)
                  Rvalue:  (at 338)
                    Identifier: HI (at 338)
            Case:  (at 341)
              Block: None (from 341 to 349)
                BlockingSubstitution:  (from 342 to 342)
                  Lvalue:  (at 342)
                    Identifier: next_state (at 342)
                  Rvalue:  (at 342)
                    IntConst: 3'bxxx (at 342)
                BlockingSubstitution:  (from 343 to 343)
                  Lvalue:  (at 343)
                    Identifier: cntr_resetH (at 343)
                  Rvalue:  (at 343)
                    Identifier: X (at 343)
                BlockingSubstitution:  (from 344 to 344)
                  Lvalue:  (at 344)
                    Identifier: shiftH (at 344)
                  Rvalue:  (at 344)
                    Identifier: X (at 344)
                BlockingSubstitution:  (from 345 to 345)
                  Lvalue:  (at 345)
                    Identifier: countH (at 345)
                  Rvalue:  (at 345)
                    Identifier: X (at 345)
                BlockingSubstitution:  (from 346 to 346)
                  Lvalue:  (at 346)
                    Identifier: rstCountH (at 346)
                  Rvalue:  (at 346)
                    Identifier: X (at 346)
                BlockingSubstitution:  (from 347 to 347)
                  Lvalue:  (at 347)
                    Identifier: rec_readyInH (at 347)
                  Rvalue:  (at 347)
                    Identifier: X (at 347)
      Always:  (from 357 to 359)
        SensList:  (at 357)
          Sens: posedge (at 357)
            Identifier: sys_clk (at 357)
          Sens: negedge (at 357)
            Identifier: sys_rst_l (at 357)
        IfStatement:  (from 358 to 359)
          Unot:  (at 358)
            Identifier: sys_rst_l (at 358)
          NonblockingSubstitution:  (from 358 to 358)
            Lvalue:  (at 358)
              Identifier: rec_readyH (at 358)
            Rvalue:  (at 358)
              IntConst: 0 (at 358)
          NonblockingSubstitution:  (from 359 to 359)
            Lvalue:  (at 359)
              Identifier: rec_readyH (at 359)
            Rvalue:  (at 359)
              Identifier: rec_readyInH (at 359)
    ModuleDef: u_xmit (from 368 to 613)
      Paramlist:  (at 0)
      Portlist:  (at 368)
        Port: sys_clk, None (at 368)
        Port: sys_rst_l, None (at 368)
        Port: uart_xmitH, None (at 368)
        Port: xmitH, None (at 368)
        Port: xmit_dataH, None (at 368)
        Port: xmit_doneH, None (at 368)
      Decl:  (at 382)
        Parameter: r_START, False (at 382)
          Rvalue:  (at 382)
            IntConst: 3'b001 (at 382)
        Parameter: r_CENTER, False (at 382)
          Rvalue:  (at 383)
            IntConst: 3'b010 (at 383)
        Parameter: r_WAIT, False (at 382)
          Rvalue:  (at 384)
            IntConst: 3'b011 (at 384)
        Parameter: r_SAMPLE, False (at 382)
          Rvalue:  (at 385)
            IntConst: 3'b100 (at 385)
        Parameter: r_STOP, False (at 382)
          Rvalue:  (at 386)
            IntConst: 3'b101 (at 386)
      Decl:  (at 391)
        Parameter: x_IDLE, False (at 391)
          Rvalue:  (at 391)
            IntConst: 3'b000 (at 391)
        Parameter: x_START, False (at 391)
          Rvalue:  (at 392)
            IntConst: 3'b010 (at 392)
        Parameter: x_WAIT, False (at 391)
          Rvalue:  (at 393)
            IntConst: 3'b011 (at 393)
        Parameter: x_SHIFT, False (at 391)
          Rvalue:  (at 394)
            IntConst: 3'b100 (at 394)
        Parameter: x_STOP, False (at 391)
          Rvalue:  (at 395)
            IntConst: 3'b101 (at 395)
        Parameter: x_DataSend, False (at 391)
          Rvalue:  (at 396)
            IntConst: 3'b111 (at 396)
      Decl:  (at 399)
        Parameter: s_idle, False (at 399)
          Rvalue:  (at 399)
            IntConst: 3'b000 (at 399)
        Parameter: s_count1, False (at 399)
          Rvalue:  (at 400)
            IntConst: 3'b001 (at 400)
        Parameter: s_count2, False (at 399)
          Rvalue:  (at 401)
            IntConst: 3'b010 (at 401)
        Parameter: s_count3, False (at 399)
          Rvalue:  (at 402)
            IntConst: 3'b011 (at 402)
        Parameter: s_stop, False (at 399)
          Rvalue:  (at 403)
            IntConst: 3'b111 (at 403)
      Decl:  (at 406)
        Parameter: x_STARTbit, False (at 406)
          Rvalue:  (at 406)
            IntConst: 2'b00 (at 406)
        Parameter: x_STOPbit, False (at 406)
          Rvalue:  (at 407)
            IntConst: 2'b01 (at 407)
        Parameter: x_ShiftReg, False (at 406)
          Rvalue:  (at 408)
            IntConst: 2'b10 (at 408)
        Parameter: x_miDataSend, False (at 406)
          Rvalue:  (at 409)
            IntConst: 2'b11 (at 409)
      Decl:  (at 414)
        Parameter: LO, False (at 414)
          Rvalue:  (at 414)
            IntConst: 1'b0 (at 414)
        Parameter: HI, False (at 414)
          Rvalue:  (at 415)
            IntConst: 1'b1 (at 415)
        Parameter: X, False (at 414)
          Rvalue:  (at 416)
            IntConst: 1'bx (at 416)
        Parameter: DataSend, False (at 414)
          Rvalue:  (at 417)
            IntConst: 1'b0 (at 417)
      Decl:  (at 420)
        Parameter: DataSend_bit, False (at 420)
          Rvalue:  (at 420)
            IntConst: 1'b1 (at 420)
      Decl:  (at 421)
        Parameter: DataCon_bit, False (at 421)
          Rvalue:  (at 421)
            IntConst: 1'b1 (at 421)
      Decl:  (at 434)
        Parameter: WORD_LEN, False (at 434)
          Rvalue:  (at 434)
            IntConst: 8 (at 434)
      Decl:  (at 441)
        Input: sys_clk, False (at 441)
      Decl:  (at 442)
        Input: sys_rst_l, False (at 442)
      Decl:  (at 444)
        Output: uart_xmitH, False (at 444)
      Decl:  (at 445)
        Input: xmitH, False (at 445)
      Decl:  (at 446)
        Input: xmit_dataH, False (at 446)
          Width:  (at 446)
            IntConst: 7 (at 446)
            IntConst: 0 (at 446)
      Decl:  (at 447)
        Output: xmit_doneH, False (at 447)
      Decl:  (at 449)
        Reg: next_state, False (at 449)
          Width:  (at 449)
            IntConst: 2 (at 449)
            IntConst: 0 (at 449)
        Reg: state, False (at 449)
          Width:  (at 449)
            IntConst: 2 (at 449)
            IntConst: 0 (at 449)
      Decl:  (at 450)
        Reg: load_shiftRegH, False (at 450)
      Decl:  (at 451)
        Reg: shiftEnaH, False (at 451)
      Decl:  (at 452)
        Reg: bitCell_cntrH, False (at 452)
          Width:  (at 452)
            IntConst: 3 (at 452)
            IntConst: 0 (at 452)
      Decl:  (at 453)
        Reg: countEnaH, False (at 453)
      Decl:  (at 454)
        Reg: xmit_ShiftRegH, False (at 454)
          Width:  (at 454)
            IntConst: 7 (at 454)
            IntConst: 0 (at 454)
      Decl:  (at 455)
        Reg: bitCountH, False (at 455)
          Width:  (at 455)
            IntConst: 3 (at 455)
            IntConst: 0 (at 455)
      Decl:  (at 456)
        Reg: rst_bitCountH, False (at 456)
      Decl:  (at 457)
        Reg: ena_bitCountH, False (at 457)
      Decl:  (at 458)
        Reg: xmitDataSelH, False (at 458)
          Width:  (at 458)
            IntConst: 1 (at 458)
            IntConst: 0 (at 458)
      Decl:  (at 459)
        Reg: uart_xmitH, False (at 459)
      Decl:  (at 460)
        Reg: xmit_doneInH, False (at 460)
      Decl:  (at 461)
        Reg: xmit_doneH, False (at 461)
      Always:  (from 467 to 474)
        SensList:  (at 467)
          Sens: level (at 467)
            Identifier: xmit_ShiftRegH (at 467)
          Sens: level (at 467)
            Identifier: xmitDataSelH (at 467)
        CaseStatement:  (from 468 to 474)
          Identifier: xmitDataSelH (at 468)
          Case:  (at 469)
            Identifier: x_STARTbit (at 469)
            BlockingSubstitution:  (from 469 to 469)
              Lvalue:  (at 469)
                Identifier: uart_xmitH (at 469)
              Rvalue:  (at 469)
                Identifier: LO (at 469)
          Case:  (at 470)
            Identifier: x_STOPbit (at 470)
            BlockingSubstitution:  (from 470 to 470)
              Lvalue:  (at 470)
                Identifier: uart_xmitH (at 470)
              Rvalue:  (at 470)
                Identifier: HI (at 470)
          Case:  (at 471)
            Identifier: x_miDataSend (at 471)
            BlockingSubstitution:  (from 471 to 471)
              Lvalue:  (at 471)
                Identifier: uart_xmitH (at 471)
              Rvalue:  (at 471)
                Identifier: DataSend (at 471)
          Case:  (at 472)
            Identifier: x_ShiftReg (at 472)
            BlockingSubstitution:  (from 472 to 472)
              Lvalue:  (at 472)
                Identifier: uart_xmitH (at 472)
              Rvalue:  (at 472)
                Pointer:  (at 472)
                  Identifier: xmit_ShiftRegH (at 472)
                  IntConst: 0 (at 472)
          Case:  (at 473)
            BlockingSubstitution:  (from 473 to 473)
              Lvalue:  (at 473)
                Identifier: uart_xmitH (at 473)
              Rvalue:  (at 473)
                Identifier: X (at 473)
      Always:  (from 477 to 480)
        SensList:  (at 477)
          Sens: posedge (at 477)
            Identifier: sys_clk (at 477)
          Sens: negedge (at 477)
            Identifier: sys_rst_l (at 477)
        IfStatement:  (from 478 to 480)
          Unot:  (at 478)
            Identifier: sys_rst_l (at 478)
          NonblockingSubstitution:  (from 478 to 478)
            Lvalue:  (at 478)
              Identifier: bitCell_cntrH (at 478)
            Rvalue:  (at 478)
              IntConst: 0 (at 478)
          IfStatement:  (from 479 to 480)
            Identifier: countEnaH (at 479)
            NonblockingSubstitution:  (from 479 to 479)
              Lvalue:  (at 479)
                Identifier: bitCell_cntrH (at 479)
              Rvalue:  (at 479)
                Plus:  (at 479)
                  Identifier: bitCell_cntrH (at 479)
                  IntConst: 1 (at 479)
            NonblockingSubstitution:  (from 480 to 480)
              Lvalue:  (at 480)
                Identifier: bitCell_cntrH (at 480)
              Rvalue:  (at 480)
                IntConst: 0 (at 480)
      Always:  (from 482 to 493)
        SensList:  (at 482)
          Sens: posedge (at 482)
            Identifier: sys_clk (at 482)
          Sens: negedge (at 482)
            Identifier: sys_rst_l (at 482)
        IfStatement:  (from 483 to 493)
          Unot:  (at 483)
            Identifier: sys_rst_l (at 483)
          NonblockingSubstitution:  (from 483 to 483)
            Lvalue:  (at 483)
              Identifier: xmit_ShiftRegH (at 483)
            Rvalue:  (at 483)
              IntConst: 0 (at 483)
          IfStatement:  (from 485 to 493)
            Identifier: load_shiftRegH (at 485)
            NonblockingSubstitution:  (from 489 to 489)
              Lvalue:  (at 489)
                Identifier: xmit_ShiftRegH (at 489)
              Rvalue:  (at 489)
                Identifier: xmit_dataH (at 489)
            IfStatement:  (from 490 to 493)
              Identifier: shiftEnaH (at 490)
              Block: None (from 490 to 493)
                NonblockingSubstitution:  (from 491 to 491)
                  Lvalue:  (at 491)
                    Partselect:  (at 491)
                      Identifier: xmit_ShiftRegH (at 491)
                      IntConst: 6 (at 491)
                      IntConst: 0 (at 491)
                  Rvalue:  (at 491)
                    Partselect:  (at 491)
                      Identifier: xmit_ShiftRegH (at 491)
                      IntConst: 7 (at 491)
                      IntConst: 1 (at 491)
                NonblockingSubstitution:  (from 492 to 492)
                  Lvalue:  (at 492)
                    Pointer:  (at 492)
                      Identifier: xmit_ShiftRegH (at 492)
                      IntConst: 7 (at 492)
                  Rvalue:  (at 492)
                    Identifier: HI (at 492)
              NonblockingSubstitution:  (from 493 to 493)
                Lvalue:  (at 493)
                  Identifier: xmit_ShiftRegH (at 493)
                Rvalue:  (at 493)
                  Identifier: xmit_ShiftRegH (at 493)
      Always:  (from 496 to 499)
        SensList:  (at 496)
          Sens: posedge (at 496)
            Identifier: sys_clk (at 496)
          Sens: negedge (at 496)
            Identifier: sys_rst_l (at 496)
        IfStatement:  (from 497 to 499)
          Unot:  (at 497)
            Identifier: sys_rst_l (at 497)
          NonblockingSubstitution:  (from 497 to 497)
            Lvalue:  (at 497)
              Identifier: bitCountH (at 497)
            Rvalue:  (at 497)
              IntConst: 0 (at 497)
          IfStatement:  (from 498 to 499)
            Identifier: rst_bitCountH (at 498)
            NonblockingSubstitution:  (from 498 to 498)
              Lvalue:  (at 498)
                Identifier: bitCountH (at 498)
              Rvalue:  (at 498)
                IntConst: 0 (at 498)
            IfStatement:  (from 499 to 499)
              Identifier: ena_bitCountH (at 499)
              NonblockingSubstitution:  (from 499 to 499)
                Lvalue:  (at 499)
                  Identifier: bitCountH (at 499)
                Rvalue:  (at 499)
                  Plus:  (at 499)
                    Identifier: bitCountH (at 499)
                    IntConst: 1 (at 499)
      Always:  (from 502 to 504)
        SensList:  (at 502)
          Sens: posedge (at 502)
            Identifier: sys_clk (at 502)
          Sens: negedge (at 502)
            Identifier: sys_rst_l (at 502)
        IfStatement:  (from 503 to 504)
          Unot:  (at 503)
            Identifier: sys_rst_l (at 503)
          NonblockingSubstitution:  (from 503 to 503)
            Lvalue:  (at 503)
              Identifier: state (at 503)
            Rvalue:  (at 503)
              Identifier: x_IDLE (at 503)
          NonblockingSubstitution:  (from 504 to 504)
            Lvalue:  (at 504)
              Identifier: state (at 504)
            Rvalue:  (at 504)
              Identifier: next_state (at 504)
      Always:  (from 507 to 593)
        SensList:  (at 507)
          Sens: level (at 507)
            Identifier: state (at 507)
          Sens: level (at 507)
            Identifier: xmitH (at 507)
          Sens: level (at 507)
            Identifier: bitCell_cntrH (at 507)
          Sens: level (at 507)
            Identifier: bitCountH (at 507)
        Block: None (from 508 to 593)
          BlockingSubstitution:  (from 510 to 510)
            Lvalue:  (at 510)
              Identifier: next_state (at 510)
            Rvalue:  (at 510)
              Identifier: state (at 510)
          BlockingSubstitution:  (from 511 to 511)
            Lvalue:  (at 511)
              Identifier: load_shiftRegH (at 511)
            Rvalue:  (at 511)
              Identifier: LO (at 511)
          BlockingSubstitution:  (from 512 to 512)
            Lvalue:  (at 512)
              Identifier: countEnaH (at 512)
            Rvalue:  (at 512)
              Identifier: LO (at 512)
          BlockingSubstitution:  (from 513 to 513)
            Lvalue:  (at 513)
              Identifier: shiftEnaH (at 513)
            Rvalue:  (at 513)
              Identifier: LO (at 513)
          BlockingSubstitution:  (from 514 to 514)
            Lvalue:  (at 514)
              Identifier: rst_bitCountH (at 514)
            Rvalue:  (at 514)
              Identifier: LO (at 514)
          BlockingSubstitution:  (from 515 to 515)
            Lvalue:  (at 515)
              Identifier: ena_bitCountH (at 515)
            Rvalue:  (at 515)
              Identifier: LO (at 515)
          BlockingSubstitution:  (from 516 to 516)
            Lvalue:  (at 516)
              Identifier: xmitDataSelH (at 516)
            Rvalue:  (at 516)
              Identifier: x_STOPbit (at 516)
          BlockingSubstitution:  (from 517 to 517)
            Lvalue:  (at 517)
              Identifier: xmit_doneInH (at 517)
            Rvalue:  (at 517)
              Identifier: LO (at 517)
          CaseStatement:  (from 519 to 591)
            Identifier: state (at 519)
            Case:  (at 521)
              Identifier: x_IDLE (at 521)
              Block: None (from 521 to 530)
                IfStatement:  (from 522 to 529)
                  Identifier: xmitH (at 522)
                  Block: None (from 522 to 525)
                    BlockingSubstitution:  (from 523 to 523)
                      Lvalue:  (at 523)
                        Identifier: next_state (at 523)
                      Rvalue:  (at 523)
                        Identifier: x_START (at 523)
                    BlockingSubstitution:  (from 524 to 524)
                      Lvalue:  (at 524)
                        Identifier: load_shiftRegH (at 524)
                      Rvalue:  (at 524)
                        Identifier: HI (at 524)
                  Block: None (from 525 to 529)
                    BlockingSubstitution:  (from 526 to 526)
                      Lvalue:  (at 526)
                        Identifier: next_state (at 526)
                      Rvalue:  (at 526)
                        Identifier: x_IDLE (at 526)
                    BlockingSubstitution:  (from 527 to 527)
                      Lvalue:  (at 527)
                        Identifier: rst_bitCountH (at 527)
                      Rvalue:  (at 527)
                        Identifier: HI (at 527)
                    BlockingSubstitution:  (from 528 to 528)
                      Lvalue:  (at 528)
                        Identifier: xmit_doneInH (at 528)
                      Rvalue:  (at 528)
                        Identifier: HI (at 528)
            Case:  (at 533)
              Identifier: x_START (at 533)
              Block: None (from 533 to 541)
                BlockingSubstitution:  (from 534 to 534)
                  Lvalue:  (at 534)
                    Identifier: xmitDataSelH (at 534)
                  Rvalue:  (at 534)
                    Identifier: x_STARTbit (at 534)
                IfStatement:  (from 535 to 540)
                  Eq:  (at 535)
                    Identifier: bitCell_cntrH (at 535)
                    IntConst: 4'hF (at 535)
                  BlockingSubstitution:  (from 536 to 536)
                    Lvalue:  (at 536)
                      Identifier: next_state (at 536)
                    Rvalue:  (at 536)
                      Identifier: x_WAIT (at 536)
                  Block: None (from 537 to 540)
                    BlockingSubstitution:  (from 538 to 538)
                      Lvalue:  (at 538)
                        Identifier: next_state (at 538)
                      Rvalue:  (at 538)
                        Identifier: x_START (at 538)
                    BlockingSubstitution:  (from 539 to 539)
                      Lvalue:  (at 539)
                        Identifier: countEnaH (at 539)
                      Rvalue:  (at 539)
                        Identifier: HI (at 539)
            Case:  (at 543)
              Identifier: x_WAIT (at 543)
              Block: None (from 543 to 556)
                BlockingSubstitution:  (from 544 to 544)
                  Lvalue:  (at 544)
                    Identifier: xmitDataSelH (at 544)
                  Rvalue:  (at 544)
                    Identifier: x_ShiftReg (at 544)
                IfStatement:  (from 545 to 555)
                  Eq:  (at 545)
                    Identifier: bitCell_cntrH (at 545)
                    IntConst: 4'hE (at 545)
                  Block: None (from 545 to 552)
                    IfStatement:  (from 546 to 551)
                      Eq:  (at 546)
                        Identifier: bitCountH (at 546)
                        Identifier: WORD_LEN (at 546)
                      BlockingSubstitution:  (from 547 to 547)
                        Lvalue:  (at 547)
                          Identifier: next_state (at 547)
                        Rvalue:  (at 547)
                          Identifier: x_STOP (at 547)
                      Block: None (from 548 to 551)
                        BlockingSubstitution:  (from 549 to 549)
                          Lvalue:  (at 549)
                            Identifier: next_state (at 549)
                          Rvalue:  (at 549)
                            Identifier: x_SHIFT (at 549)
                        BlockingSubstitution:  (from 550 to 550)
                          Lvalue:  (at 550)
                            Identifier: ena_bitCountH (at 550)
                          Rvalue:  (at 550)
                            Identifier: HI (at 550)
                  Block: None (from 552 to 555)
                    BlockingSubstitution:  (from 553 to 553)
                      Lvalue:  (at 553)
                        Identifier: next_state (at 553)
                      Rvalue:  (at 553)
                        Identifier: x_WAIT (at 553)
                    BlockingSubstitution:  (from 554 to 554)
                      Lvalue:  (at 554)
                        Identifier: countEnaH (at 554)
                      Rvalue:  (at 554)
                        Identifier: HI (at 554)
            Case:  (at 560)
              Identifier: x_SHIFT (at 560)
              Block: None (from 560 to 564)
                BlockingSubstitution:  (from 561 to 561)
                  Lvalue:  (at 561)
                    Identifier: xmitDataSelH (at 561)
                  Rvalue:  (at 561)
                    Identifier: x_ShiftReg (at 561)
                BlockingSubstitution:  (from 562 to 562)
                  Lvalue:  (at 562)
                    Identifier: next_state (at 562)
                  Rvalue:  (at 562)
                    Identifier: x_WAIT (at 562)
                BlockingSubstitution:  (from 563 to 563)
                  Lvalue:  (at 563)
                    Identifier: shiftEnaH (at 563)
                  Rvalue:  (at 563)
                    Identifier: HI (at 563)
            Case:  (at 567)
              Identifier: x_STOP (at 567)
              Block: None (from 567 to 576)
                BlockingSubstitution:  (from 568 to 568)
                  Lvalue:  (at 568)
                    Identifier: xmitDataSelH (at 568)
                  Rvalue:  (at 568)
                    Identifier: x_STOPbit (at 568)
                IfStatement:  (from 569 to 575)
                  Eq:  (at 569)
                    Identifier: bitCell_cntrH (at 569)
                    IntConst: 4'hF (at 569)
                  Block: None (from 569 to 572)
                    BlockingSubstitution:  (from 570 to 570)
                      Lvalue:  (at 570)
                        Identifier: next_state (at 570)
                      Rvalue:  (at 570)
                        Identifier: x_IDLE (at 570)
                    BlockingSubstitution:  (from 571 to 571)
                      Lvalue:  (at 571)
                        Identifier: xmit_doneInH (at 571)
                      Rvalue:  (at 571)
                        Identifier: HI (at 571)
                  Block: None (from 572 to 575)
                    BlockingSubstitution:  (from 573 to 573)
                      Lvalue:  (at 573)
                        Identifier: next_state (at 573)
                      Rvalue:  (at 573)
                        Identifier: x_STOP (at 573)
                    BlockingSubstitution:  (from 574 to 574)
                      Lvalue:  (at 574)
                        Identifier: countEnaH (at 574)
                      Rvalue:  (at 574)
                        Identifier: HI (at 574)
            Case:  (at 580)
              Block: None (from 580 to 589)
                BlockingSubstitution:  (from 581 to 581)
                  Lvalue:  (at 581)
                    Identifier: next_state (at 581)
                  Rvalue:  (at 581)
                    IntConst: 3'bxxx (at 581)
                BlockingSubstitution:  (from 582 to 582)
                  Lvalue:  (at 582)
                    Identifier: load_shiftRegH (at 582)
                  Rvalue:  (at 582)
                    Identifier: X (at 582)
                BlockingSubstitution:  (from 583 to 583)
                  Lvalue:  (at 583)
                    Identifier: countEnaH (at 583)
                  Rvalue:  (at 583)
                    Identifier: X (at 583)
                BlockingSubstitution:  (from 584 to 584)
                  Lvalue:  (at 584)
                    Identifier: shiftEnaH (at 584)
                  Rvalue:  (at 584)
                    Identifier: X (at 584)
                BlockingSubstitution:  (from 585 to 585)
                  Lvalue:  (at 585)
                    Identifier: rst_bitCountH (at 585)
                  Rvalue:  (at 585)
                    Identifier: X (at 585)
                BlockingSubstitution:  (from 586 to 586)
                  Lvalue:  (at 586)
                    Identifier: ena_bitCountH (at 586)
                  Rvalue:  (at 586)
                    Identifier: X (at 586)
                BlockingSubstitution:  (from 587 to 587)
                  Lvalue:  (at 587)
                    Identifier: xmitDataSelH (at 587)
                  Rvalue:  (at 587)
                    IntConst: 2'bxx (at 587)
                BlockingSubstitution:  (from 588 to 588)
                  Lvalue:  (at 588)
                    Identifier: xmit_doneInH (at 588)
                  Rvalue:  (at 588)
                    Identifier: X (at 588)
      Always:  (from 609 to 611)
        SensList:  (at 609)
          Sens: posedge (at 609)
            Identifier: sys_clk (at 609)
          Sens: negedge (at 609)
            Identifier: sys_rst_l (at 609)
        IfStatement:  (from 610 to 611)
          Unot:  (at 610)
            Identifier: sys_rst_l (at 610)
          NonblockingSubstitution:  (from 610 to 610)
            Lvalue:  (at 610)
              Identifier: xmit_doneH (at 610)
            Rvalue:  (at 610)
              IntConst: 0 (at 610)
          NonblockingSubstitution:  (from 611 to 611)
            Lvalue:  (at 611)
              Identifier: xmit_doneH (at 611)
            Rvalue:  (at 611)
              Identifier: xmit_doneInH (at 611)
